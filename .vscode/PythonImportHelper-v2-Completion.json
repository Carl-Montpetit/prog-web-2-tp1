[
    {
        "label": "sqlite3",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlite3",
        "description": "sqlite3",
        "detail": "sqlite3",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Database",
        "importPath": "database.Database",
        "description": "database.Database",
        "isExtraImport": true,
        "detail": "database.Database",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Article",
        "kind": 6,
        "importPath": "inf5190_tp1_src.article.Article",
        "description": "inf5190_tp1_src.article.Article",
        "peekOfCode": "class Article:\n    def __init__(self, titre, identifiant, auteur, date_publication, paragraphe):\n        self.titre = titre\n        self.identifiant = identifiant\n        self.auteur = auteur\n        self.date_publication = date_publication\n        self.paragraphe = paragraphe\n    def to_dictionnary(self):\n        \"\"\"[map everything as a dictionnary]\"\"\"\n        return {",
        "detail": "inf5190_tp1_src.article.Article",
        "documentation": {}
    },
    {
        "label": "Database",
        "kind": 6,
        "importPath": "inf5190_tp1_src.database.Database",
        "description": "inf5190_tp1_src.database.Database",
        "peekOfCode": "class Database:\n    def __init__(self):\n        self.connection = None\n    # Return cursor as a dict\n    def to_dict(self, dict_name, cursor):\n        return [dict(dict_name) for dict_name in cursor.fetchall()]\n    def get_connection(self):\n        \"\"\"Open database connection. Should be closed after use\"\"\"\n        if self.connection is None:\n            self.connection = sqlite3.\\",
        "detail": "inf5190_tp1_src.database.Database",
        "documentation": {}
    },
    {
        "label": "get_db",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def get_db():\n    # [x]\n    db = getattr(g, \"_database\", None)\n    if db is None:\n        g._database = Database()\n    return g._database\n@app.teardown_appcontext\n# [x]\ndef close_connection(exception):\n    db = getattr(g, \"_database\", None)",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "close_connection",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def close_connection(exception):\n    db = getattr(g, \"_database\", None)\n    if db is not None:\n        db.disconnect()\n@app.errorhandler(404)\n# [x]\ndef page_not_found(error):\n    return render_template(ERR_404_PAGE), 404\n@app.route(\"/\", methods=[\"GET\"])\n# [x]",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "page_not_found",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def page_not_found(error):\n    return render_template(ERR_404_PAGE), 404\n@app.route(\"/\", methods=[\"GET\"])\n# [x]\ndef get_last_five_articles():\n    articles = get_db().get_five_last_articles(today_date)\n    return render_template(HOME_PAGE, articles=articles)\n@app.route('/', methods=['POST'])\n# [x]\ndef search_articles():",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "get_last_five_articles",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def get_last_five_articles():\n    articles = get_db().get_five_last_articles(today_date)\n    return render_template(HOME_PAGE, articles=articles)\n@app.route('/', methods=['POST'])\n# [x]\ndef search_articles():\n    search = request.form['search']\n    articles = get_db().get_search_articles(search)\n    return render_template(HOME_PAGE, articles=articles, search=search)\n@app.route(\"/article/<string:identifiant>\", methods=[\"GET\"])",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "search_articles",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def search_articles():\n    search = request.form['search']\n    articles = get_db().get_search_articles(search)\n    return render_template(HOME_PAGE, articles=articles, search=search)\n@app.route(\"/article/<string:identifiant>\", methods=[\"GET\"])\n# [x]\ndef get_an_article(identifiant):\n    try:\n        article = get_db().get_article_by_identifiant(identifiant)\n        titre = article[0][\"titre\"]",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "get_an_article",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def get_an_article(identifiant):\n    try:\n        article = get_db().get_article_by_identifiant(identifiant)\n        titre = article[0][\"titre\"]\n        identifiant = article[0][\"identifiant\"]\n        auteur = article[0][\"auteur\"]\n        date_publication = article[0][\"date_publication\"]\n        paragraphe = article[0][\"paragraphe\"]\n    except Exception:\n        return render_template(ERR_404_PAGE), 404",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "get_an_article_modify",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def get_an_article_modify(identifiant):\n    try:\n        article = get_db().get_article_by_identifiant(identifiant)\n        titre = article[0][\"titre\"]\n        identifiant = article[0][\"identifiant\"]\n        auteur = article[0][\"auteur\"]\n        date_publication = article[0][\"date_publication\"]\n        paragraphe = article[0][\"paragraphe\"]\n    except Exception:\n        return render_template(ERR_404_PAGE), 404",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "modify_article",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def modify_article(identifiant):\n    try:\n        article = get_db().get_article_by_identifiant(identifiant)\n    except Exception:\n        return render_template(ERR_404_PAGE), 404\n    get_db().modify_article(article)\n    return redirect(ADMIN_PAGE, msg=INFO_MSG_MODIFIED)\n@app.route(\"/admin<string:msg>\", methods=[\"GET\"])\n# [x]\ndef get_admin_validation_added(msg):",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "get_admin_validation_added",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def get_admin_validation_added(msg):\n    articles = get_db().get_all_articles()\n    return render_template(ADMIN_PAGE, articles=articles, msg=msg)\n@app.route(\"/admin\", methods=[\"GET\"])\n# [x]\ndef get_admin():\n    articles = get_db().get_all_articles()\n    return render_template(ADMIN_PAGE, articles=articles)\n@app.route(\"/admin-nouveau\", methods=[\"GET\"])\n# [x]",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "get_admin",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def get_admin():\n    articles = get_db().get_all_articles()\n    return render_template(ADMIN_PAGE, articles=articles)\n@app.route(\"/admin-nouveau\", methods=[\"GET\"])\n# [x]\ndef get_admin_new():\n    return render_template(ADMIN_NEW_ARTICLE_PAGE)\n@app.route(\"/admin-nouveau\", methods=[\"POST\"])\n# [x]\ndef add_new_article_in_bd():",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "get_admin_new",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def get_admin_new():\n    return render_template(ADMIN_NEW_ARTICLE_PAGE)\n@app.route(\"/admin-nouveau\", methods=[\"POST\"])\n# [x]\ndef add_new_article_in_bd():\n    titre = request.form[\"titre\"]\n    identifiant = request.form[\"identifiant\"]\n    auteur = request.form[\"auteur\"]\n    date_publication = request.form[\"date_publication\"]\n    date_validation = re.match(PATTERN_DATE, date_publication)",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "add_new_article_in_bd",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def add_new_article_in_bd():\n    titre = request.form[\"titre\"]\n    identifiant = request.form[\"identifiant\"]\n    auteur = request.form[\"auteur\"]\n    date_publication = request.form[\"date_publication\"]\n    date_validation = re.match(PATTERN_DATE, date_publication)\n    paragraphe = request.form[\"paragraphe\"]\n    article = [titre, identifiant, auteur, date_publication, paragraphe]\n    # if there's error(s) the page show error message(s) to the user\n    if (",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "append_article_to_logfile",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def append_article_to_logfile(\n        titre, identifiant, auteur,\n        date_publication, paragraphe):\n    file = open(\"log.txt\", \"a\")\n    file.write(\n        (f'titre\\t\\t\\t\\t⟹\\t\\t{titre}\\nidentifiant\\t\\t\\t⟹'\n         f'\\t\\t{identifiant}\\nauteur'\n         f'\\t\\t\\t\\t⟹\\t\\t{auteur}\\ndate_publication\\t⟹\\t\\t{date_publication}'\n         f'\\nparagraphe\\t\\t\\t⬇︎\\n{paragraphe}\\n============================'\n         '====================================================\\n'))",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "append_modified_to_logfile",
        "kind": 2,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "def append_modified_to_logfile(titre, paragraphe):\n    file = open(\"log.txt\", \"a\")\n    file.write(\n        (f'Modification :\\ntitre\\t\\t\\t\\t⟹\\t\\t{titre}\\nparagraphe'\n         f'\\t\\t\\t⬇︎\\n{paragraphe}\\ndate\\t⟹\\t\\t{today_date}'\n         '\\n========================================='\n         '=======================================\\n')\n    )\n# This is always true if app.py is used as entry point of the interpretor\nif __name__ == \"__main__\":",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "app = Flask(\n    __name__, static_folder=\"static\", template_folder=\"templates\",\n    static_url_path=\"\"\n)\napp.secret_key = \"Carl.M\"\n# CONSTANTS\nADMIN_PAGE = \"admin.html\"\nADMIN_NEW_ARTICLE_PAGE = \"admin-new.html\"\nARTICLE_PAGE = \"article.html\"\nHOME_PAGE = \"home.html\"",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "app.secret_key",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "app.secret_key = \"Carl.M\"\n# CONSTANTS\nADMIN_PAGE = \"admin.html\"\nADMIN_NEW_ARTICLE_PAGE = \"admin-new.html\"\nARTICLE_PAGE = \"article.html\"\nHOME_PAGE = \"home.html\"\nERR_404_PAGE = \"404.html\"\nMODIFY_ARTICLE_PAGE = \"modify-article.html\"\nSEARCH_RESULT_PAGE = \"search-result.html\"\nERR_MSG_EMPTY_FIELDS = (\"⚠️Tous les champs doivent impérativement\"",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "ADMIN_PAGE",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "ADMIN_PAGE = \"admin.html\"\nADMIN_NEW_ARTICLE_PAGE = \"admin-new.html\"\nARTICLE_PAGE = \"article.html\"\nHOME_PAGE = \"home.html\"\nERR_404_PAGE = \"404.html\"\nMODIFY_ARTICLE_PAGE = \"modify-article.html\"\nSEARCH_RESULT_PAGE = \"search-result.html\"\nERR_MSG_EMPTY_FIELDS = (\"⚠️Tous les champs doivent impérativement\"\n                        \" être remplis!..\")\nERR_MSG_TITRE = (",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "ADMIN_NEW_ARTICLE_PAGE",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "ADMIN_NEW_ARTICLE_PAGE = \"admin-new.html\"\nARTICLE_PAGE = \"article.html\"\nHOME_PAGE = \"home.html\"\nERR_404_PAGE = \"404.html\"\nMODIFY_ARTICLE_PAGE = \"modify-article.html\"\nSEARCH_RESULT_PAGE = \"search-result.html\"\nERR_MSG_EMPTY_FIELDS = (\"⚠️Tous les champs doivent impérativement\"\n                        \" être remplis!..\")\nERR_MSG_TITRE = (\n    \"⚠️Le champs Titre doit impérativement\"",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "ARTICLE_PAGE",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "ARTICLE_PAGE = \"article.html\"\nHOME_PAGE = \"home.html\"\nERR_404_PAGE = \"404.html\"\nMODIFY_ARTICLE_PAGE = \"modify-article.html\"\nSEARCH_RESULT_PAGE = \"search-result.html\"\nERR_MSG_EMPTY_FIELDS = (\"⚠️Tous les champs doivent impérativement\"\n                        \" être remplis!..\")\nERR_MSG_TITRE = (\n    \"⚠️Le champs Titre doit impérativement\"\n    \" contenir entre 3 et 100 caractères!..\"",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "HOME_PAGE",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "HOME_PAGE = \"home.html\"\nERR_404_PAGE = \"404.html\"\nMODIFY_ARTICLE_PAGE = \"modify-article.html\"\nSEARCH_RESULT_PAGE = \"search-result.html\"\nERR_MSG_EMPTY_FIELDS = (\"⚠️Tous les champs doivent impérativement\"\n                        \" être remplis!..\")\nERR_MSG_TITRE = (\n    \"⚠️Le champs Titre doit impérativement\"\n    \" contenir entre 3 et 100 caractères!..\"\n)",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "ERR_404_PAGE",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "ERR_404_PAGE = \"404.html\"\nMODIFY_ARTICLE_PAGE = \"modify-article.html\"\nSEARCH_RESULT_PAGE = \"search-result.html\"\nERR_MSG_EMPTY_FIELDS = (\"⚠️Tous les champs doivent impérativement\"\n                        \" être remplis!..\")\nERR_MSG_TITRE = (\n    \"⚠️Le champs Titre doit impérativement\"\n    \" contenir entre 3 et 100 caractères!..\"\n)\nERR_MSG_IDENTIFIANT = (",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "MODIFY_ARTICLE_PAGE",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "MODIFY_ARTICLE_PAGE = \"modify-article.html\"\nSEARCH_RESULT_PAGE = \"search-result.html\"\nERR_MSG_EMPTY_FIELDS = (\"⚠️Tous les champs doivent impérativement\"\n                        \" être remplis!..\")\nERR_MSG_TITRE = (\n    \"⚠️Le champs Titre doit impérativement\"\n    \" contenir entre 3 et 100 caractères!..\"\n)\nERR_MSG_IDENTIFIANT = (\n    \"⚠️Le champs Identifiant doit impérativement\"",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "SEARCH_RESULT_PAGE",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "SEARCH_RESULT_PAGE = \"search-result.html\"\nERR_MSG_EMPTY_FIELDS = (\"⚠️Tous les champs doivent impérativement\"\n                        \" être remplis!..\")\nERR_MSG_TITRE = (\n    \"⚠️Le champs Titre doit impérativement\"\n    \" contenir entre 3 et 100 caractères!..\"\n)\nERR_MSG_IDENTIFIANT = (\n    \"⚠️Le champs Identifiant doit impérativement\"\n    \" contenir entre 3 et 50 caractères!..\"",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "ERR_MSG_EMPTY_FIELDS",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "ERR_MSG_EMPTY_FIELDS = (\"⚠️Tous les champs doivent impérativement\"\n                        \" être remplis!..\")\nERR_MSG_TITRE = (\n    \"⚠️Le champs Titre doit impérativement\"\n    \" contenir entre 3 et 100 caractères!..\"\n)\nERR_MSG_IDENTIFIANT = (\n    \"⚠️Le champs Identifiant doit impérativement\"\n    \" contenir entre 3 et 50 caractères!..\"\n)",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "ERR_MSG_TITRE",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "ERR_MSG_TITRE = (\n    \"⚠️Le champs Titre doit impérativement\"\n    \" contenir entre 3 et 100 caractères!..\"\n)\nERR_MSG_IDENTIFIANT = (\n    \"⚠️Le champs Identifiant doit impérativement\"\n    \" contenir entre 3 et 50 caractères!..\"\n)\nERR_MSG_AUTEUR = (\n    \"⚠️Le champs Auteur doit impérativement contenir entre\"",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "ERR_MSG_IDENTIFIANT",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "ERR_MSG_IDENTIFIANT = (\n    \"⚠️Le champs Identifiant doit impérativement\"\n    \" contenir entre 3 et 50 caractères!..\"\n)\nERR_MSG_AUTEUR = (\n    \"⚠️Le champs Auteur doit impérativement contenir entre\"\n    \" 4 et 100 caractères!..\"\n)\nERR_MSG_DATE = (\"⚠️Le champs Date doit impérativement être de la forme\"\n                \" ⟹ (YYYY-mm-jj) avec des nombres!..\")",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "ERR_MSG_AUTEUR",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "ERR_MSG_AUTEUR = (\n    \"⚠️Le champs Auteur doit impérativement contenir entre\"\n    \" 4 et 100 caractères!..\"\n)\nERR_MSG_DATE = (\"⚠️Le champs Date doit impérativement être de la forme\"\n                \" ⟹ (YYYY-mm-jj) avec des nombres!..\")\nERR_MSG_PARAGRAPHE = (\n    \"⚠️Le champs Auteur doit impérativement\"\n    \" contenir entre 1 et 500 caractères!..\"\n)",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "ERR_MSG_DATE",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "ERR_MSG_DATE = (\"⚠️Le champs Date doit impérativement être de la forme\"\n                \" ⟹ (YYYY-mm-jj) avec des nombres!..\")\nERR_MSG_PARAGRAPHE = (\n    \"⚠️Le champs Auteur doit impérativement\"\n    \" contenir entre 1 et 500 caractères!..\"\n)\nERR_MSG_ID_NOT_UNIQUE = (\n    \"⚠️Le ID choisis existe déjà, svp veuillez en choisir un autre!..\"\n)\nINFO_MSG_CREATED = \"✅Merci, votre article a été ajouté avec succès!..\"",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "ERR_MSG_PARAGRAPHE",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "ERR_MSG_PARAGRAPHE = (\n    \"⚠️Le champs Auteur doit impérativement\"\n    \" contenir entre 1 et 500 caractères!..\"\n)\nERR_MSG_ID_NOT_UNIQUE = (\n    \"⚠️Le ID choisis existe déjà, svp veuillez en choisir un autre!..\"\n)\nINFO_MSG_CREATED = \"✅Merci, votre article a été ajouté avec succès!..\"\nINFO_MSG_MODIFIED = \"✅Merci, votre article a été modifié avec succès!..\"\n# source ⟹ https://regexland.com/regex-dates/",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "ERR_MSG_ID_NOT_UNIQUE",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "ERR_MSG_ID_NOT_UNIQUE = (\n    \"⚠️Le ID choisis existe déjà, svp veuillez en choisir un autre!..\"\n)\nINFO_MSG_CREATED = \"✅Merci, votre article a été ajouté avec succès!..\"\nINFO_MSG_MODIFIED = \"✅Merci, votre article a été modifié avec succès!..\"\n# source ⟹ https://regexland.com/regex-dates/\nPATTERN_DATE = (r\"^\\d{4}-(02-(0[1-9]|[12][0-9])|(0[469]|11)-(0[1-9]|\"\n                r\"[12][0-9]|30)|(0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))$\")\n# DATETIME UTILS\ntoday_date = datetime.now().strftime(\"%Y-%m-%d\")",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "INFO_MSG_CREATED",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "INFO_MSG_CREATED = \"✅Merci, votre article a été ajouté avec succès!..\"\nINFO_MSG_MODIFIED = \"✅Merci, votre article a été modifié avec succès!..\"\n# source ⟹ https://regexland.com/regex-dates/\nPATTERN_DATE = (r\"^\\d{4}-(02-(0[1-9]|[12][0-9])|(0[469]|11)-(0[1-9]|\"\n                r\"[12][0-9]|30)|(0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))$\")\n# DATETIME UTILS\ntoday_date = datetime.now().strftime(\"%Y-%m-%d\")\ndef get_db():\n    # [x]\n    db = getattr(g, \"_database\", None)",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "INFO_MSG_MODIFIED",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "INFO_MSG_MODIFIED = \"✅Merci, votre article a été modifié avec succès!..\"\n# source ⟹ https://regexland.com/regex-dates/\nPATTERN_DATE = (r\"^\\d{4}-(02-(0[1-9]|[12][0-9])|(0[469]|11)-(0[1-9]|\"\n                r\"[12][0-9]|30)|(0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))$\")\n# DATETIME UTILS\ntoday_date = datetime.now().strftime(\"%Y-%m-%d\")\ndef get_db():\n    # [x]\n    db = getattr(g, \"_database\", None)\n    if db is None:",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "PATTERN_DATE",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "PATTERN_DATE = (r\"^\\d{4}-(02-(0[1-9]|[12][0-9])|(0[469]|11)-(0[1-9]|\"\n                r\"[12][0-9]|30)|(0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))$\")\n# DATETIME UTILS\ntoday_date = datetime.now().strftime(\"%Y-%m-%d\")\ndef get_db():\n    # [x]\n    db = getattr(g, \"_database\", None)\n    if db is None:\n        g._database = Database()\n    return g._database",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    },
    {
        "label": "today_date",
        "kind": 5,
        "importPath": "inf5190_tp1_src.app",
        "description": "inf5190_tp1_src.app",
        "peekOfCode": "today_date = datetime.now().strftime(\"%Y-%m-%d\")\ndef get_db():\n    # [x]\n    db = getattr(g, \"_database\", None)\n    if db is None:\n        g._database = Database()\n    return g._database\n@app.teardown_appcontext\n# [x]\ndef close_connection(exception):",
        "detail": "inf5190_tp1_src.app",
        "documentation": {}
    }
]